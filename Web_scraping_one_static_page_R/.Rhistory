# Read the page
link <- 'https://www.sportsmole.co.uk/football/premier-league/fixtures.html'
webpage <- read_html(link)
# Pacote xml2 para processar os dados
#install.packages('xml2')
library(xml2)
library(rvest)
# Read the page
link <- 'https://www.sportsmole.co.uk/football/premier-league/fixtures.html'
webpage <- read_html(link)
webpage
class(webpage)
View(webpage)
results <- webpage %>% html_nodes(".l_s_row_odd h54p l_sf_row fBx")
results
results
results <- webpage %>% html_nodes(".content")
results
# Leitura da web page - Retorna um documento xml
webpage <- read_html("https://www.nytimes.com/interactive/2017/06/23/opinion/trumps-lies.html")
webpage
class(webpage)
results <- webpage %>% html_nodes(".short-desc")
results
# Read the page
link <- 'https://www.sportsmole.co.uk/football/premier-league/fixtures.html'
webpage <- read_html(link)
webpage
results <- webpage %>% html_nodes(".content")
results
results <- webpage %>% html_nodes(".content")
results
results <- webpage %>% html_nodes(".header")
results
results <- webpage %>% html_nodes(".content")
results
results <- webpage %>% html_nodes(".conent")
results
results <- webpage %>% html_nodes(".conent")
results
results <- webpage %>% html_nodes(".conent")
results
results <- webpage %>% html_nodes(".hT0h odd")
results
# Read the page
link <- 'https://www.sportsmole.co.uk/football/premier-league/fixtures.html'
webpage <- read_html(link)
webpage
results <- webpage %>% html_nodes(".hT0h odd")
results
View(webpage)
class(webpage)
results <- webpage %>% html_nodes(".wrapper")
results
results <- webpage %>% html_nodes(".amp-mode-mouse amp-geo-no-group amp-iso-country-br leaderboard-fixed")
results
results <- webpage %>% html_nodes(".amp-mode-mouse amp-geo-no-group amp-iso-country-br leaderboard-fixed")
results
webpage
webpage[2]
xml_find_all(webpage, '.content')
xml_find_all(webpage, './content')
xml_find_all(webpage)
xml_find_all(webpage)
xml_find_all(webpage, ./)
xml_find_all(webpage, ./a)
xml_find_all(webpage, './')
results <- webpage %>% html_elements('div')
results
results <- webpage %>% html_elements('div') %>% html_element('.content')
results
results <- webpage %>% html_elements('div')
results
results <- webpage %>% html_elements('.content')
results
results <- webpage %>% html_elements('div')
results
results <- webpage %>% html_elements('div') %>% html_nodes('.content')
results
results <- webpage %>% html_elements('div')
results
results %>% html_nodes('.content')
results %>% html_attr('.content')
results <- webpage %>% html_elements('div')
View(results)
results
results %>% html_element('.content')
sum(is.na(results %>% html_element('.content'))
)
result
results
results %>% html_nodes('//*[@id="content"]')
results %>% html_nodes('/*[@id="content"]')
results %>% html_nodes('@id="content"')
results %>% html_nodes('id=content')
results %>% html_nodes('//*[@id="content"]')
results <- webpage %>%  html_nodes('//*[@id="content"]')       # html_elements('div')
results <- webpage %>%  html_nodes(xpath = '//*[@id="content"]')       # html_elements('div')
results
view(results)
View(results)
results <- webpage %>%  html_nodes(xpath = '//*[@id="future_fixtures"]/div[3]/div/div[1]/div/div[1]')       # html_elements('div')
results
results1 <- webpage %>%  html_nodes(xpath = '//*[@id="future_fixtures"]/div[3]')       # html_elements('div')
results
results1 <- webpage %>%  html_nodes(xpath = '//*[@id="future_fixtures"]')       # html_elements('div')
results
View(results)
results1 <- webpage %>%  html_nodes(xpath = '//*[@id="content"]')       # html_elements('div')
results
View(results)
results <- webpage %>%  html_nodes(xpath = '//*[@id="content"]')       # html_elements('div')
results
View(results)
results <- webpage %>%  html_nodes(xpath = '//*[@id="future_fixtures"]')       # html_elements('div')
results
View(results)
results <- webpage %>%  html_nodes(xpath = '//*[@id="future_fixtures"]')       # html_elements('div')
results
View(results)
class1 = 'l_s_row_odd h54p l_sf_row fBx'
class2 = 'l_s_row_even h54p l_sf_row fBx'
main_node <- webpage %>%  html_nodes(xpath = '//*[@id="future_fixtures"]')       # html_elements('div')
main_node
result <- main_node %>% hmtl_nodes(paste('./',class1))
result <- main_node %>% html_nodes(paste('./',class1))
result <- main_node %>% html_nodes(paste('.',class1))
result <- main_node %>% html_nodes(class1)
result
result
result <- main_node %>% html_nodes('.l_s_row_odd h54p')
result
# Example code for web-scraping
# Desativar warnings
options(warn = -1)
# Pacote xml2 para processar os dados
#install.packages('xml2')
library(xml2)
library(rvest)
# Read the page
link <- 'https://www.sportsmole.co.uk/football/premier-league/fixtures.html'
webpage <- read_html(link)
webpage
main_node <- webpage %>%  html_nodes(xpath = '//*[@id="future_fixtures"]')       # html_elements('div')
main_node
result <- main_node %>% html_nodes('.l_s_row_odd h54p')
result
result <- webpage %>% html_nodes('.l_sfp_four')
result
date <- webpage %>% html_nodes('.bold game_state0 www')
date
date <- webpage %>% html_nodes('.'bold game_state0 www'')
date <- webpage %>% html_nodes('.showDate')
date
View(date)
date <- webpage %>% html_nodes(css = 'bold game_state_0 www')
date
date <- webpage %>% html_nodes(css = 'bold-game_state_0-www')
date
date <- webpage %>% html_nodes(css = '.bold-game_state_0-www')
date
date <- webpage %>% html_nodes( '.bold-game_state_0-www')
date
date <- webpage %>% html_nodes('.ShowDate')
date
date <- webpage %>% html_nodes('.showDate')
date
date <- webpage %>% html_nodes('.hour www')
date
date <- webpage %>% html_nodes('.hour-www')
date
date <- webpage %>% html_nodes('.hour')
date
date <- webpage %>% html_nodes('.www')
date
date <- webpage %>% html_nodes('.game_state')
date
date <- webpage %>% html_nodes('.game_state_0')
date
date <- webpage %>% html_nodes('.game_state_0') %>% html_text()
date
class(date)
seq_along(data)
data
seq_along(date)
date
date[1]
date[2]
date[8]
date[10]
time1 <- webpage %>% html_nodes('.l_sfp_two')
time1
time1 <- webpage %>% html_nodes('.l_sfp_two') %>% html_text()
time1
time2 <- webpate %>% html_nodes('.l_sfp_four')
time2 <- webpage %>% html_nodes('.l_sfp_four') %>% html_text()
time2
df <- data.frame(date = date,
time1 = time1,
time2 = time2)
View(df)
time1 <- webpage %>% html_nodes('.l_sfp_two') %>% html_text(trim = T, '&nbsp')
time1
time1 <- webpage %>% html_nodes('.l_sfp_two') %>% html_text(trim = T, '&nbsp')
time1 <- webpage %>% html_nodes('.l_sfp_two') %>% html_text(trim = T, ' &nbsp')
?str_c
# Buscando pelas classes dos dados de interesse:
date <- webpage %>% html_nodes('.game_state_0') %>% html_text(trim = T)
date
time1 <- webpage %>% html_nodes('.l_sfp_two') %>% html_text(trim = T)
time1
time2 <- webpage %>% html_nodes('.l_sfp_four') %>% html_text(trim = T)
time2
df <- data.frame(date = date,
time1 = time1,
time2 = time2)
View(df)
df[224:, ] = NULL
df[224:244, ] = NULL
df[224:244, ]
df[-(224:244), ]
df
df <- df[-(224:), ]
df <- df[-(224:244), ]
#Exclui linhas excedentes:
df <- df[-(224:244), ]
# Exportando para CSV
write_csv(df, "times_datas.csv")
library(readr)
# Exportando para CSV
write_csv(df, "times_datas.csv")
